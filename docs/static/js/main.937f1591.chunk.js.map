{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"+KAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,UAAU,CAClBd,cAAee,YAAUC,KAAKC,Y,mCClCrBC,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,0FAE8EC,UAAUH,GAFxF,sBAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAIEA,EAAKC,OAJP,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcXM,GAdW,4CAAF,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCDCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECNwB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNxB,EAASC,GACRwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAGGqB,EDZwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QASpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,KAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAE,EAAF,eAEIA,GADGA,EAAIC,aEvBtBgB,EAAe,WAGxB,MAAoC7C,mBAAS,CAAE,YAA/C,mBAAO8C,EAAP,KAAmBC,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAahD,cAAegD,IAC5B,uBACA,6BAEQD,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCXjC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.937f1591.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length>2){\r\n            setCategories(cats =>[inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSumit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs =async( category )=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=M3d9w34t71Chaqk8WdHjeyOGGXscT3ro&q=${ encodeURI(category) }&limit=10`\r\n    const resp = await fetch (url);\r\n    const {data}= await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import React, { useState, useEffect } from 'react'\r\n//import { getGifs } from '../helpers/getGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setimages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    // useEffect( ()=>{\r\n    //     getGifs( category )\r\n    //     .then(setimages);\r\n    // }, [ category ])\r\n\r\n    \r\n   // getGifs();\r\n\r\n    return (\r\n        <>      \r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3> \r\n\r\n           { loading && <p className=\"animate__animated animate__pulse\">loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>(\r\n                        < GifGridItem \r\n                        key= { img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                } \r\n            </div>\r\n        </>    \r\n    )\r\n}\r\n","import { useState,useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n        })\r\n    }, [category])\r\n    \r\n    \r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setcategories] = useState([ 'pokemon']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <AddCategory setCategories={setcategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}  \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}